---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
		color: rgb(var(--gray-dark));
		font-size: 0.95rem;
		padding: 0.75em 1em;
		border-radius: 4px;
		transition: all 0.2s ease;
		position: relative;
	}
	a:hover {
		background-color: rgba(var(--gray-light), 0.5);
		color: var(--accent);
	}
	a.active {
		font-weight: 600;
		color: var(--accent);
	}
	a.active::after {
		content: '';
		position: absolute;
		bottom: -2px;
		left: 50%;
		transform: translateX(-50%);
		width: 20px;
		height: 3px;
		background-color: var(--accent);
		border-radius: 3px;
	}
</style>
