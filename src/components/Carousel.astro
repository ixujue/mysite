---
// 轮播组件，用于展示首页的精选内容
interface CarouselItem {
  title: string;
  description: string;
  image: string;
  link: string;
}

interface Props {
  items: CarouselItem[];
}

const { items } = Astro.props;
---

<div class="carousel-container">
  <script is:inline src="/js/color-thief.js"></script>
  <div class="carousel">
    {items.map((item, index) => (
      <div class="carousel-item" data-index={index} style={`background-image: url(${item.image});`}>
        <div class="carousel-content"></div>
        <a href={item.link} class="carousel-link"></a>
      </div>
    ))}
  </div>
  <div class="carousel-indicators">
    {items.map((_, index) => (
      <button class="indicator" data-index={index}></button>
    ))}
  </div>
  <button class="carousel-control prev">&lt;</button>
  <button class="carousel-control next">&gt;</button>
</div>

<script>
  // 轮播功能的客户端脚本 - 优化版本
  document.addEventListener('DOMContentLoaded', () => {
    const carousel = document.querySelector('.carousel');
    const items = document.querySelectorAll('.carousel-item');
    const indicators = document.querySelectorAll('.indicator');
    const prevBtn = document.querySelector('.carousel-control.prev');
    const nextBtn = document.querySelector('.carousel-control.next');
    
    if (!carousel || !items.length || !indicators.length || !prevBtn || !nextBtn) return;
    
    let currentIndex = 0;
    const itemCount = items.length;
    let interval;
    
    // 预加载图片并提取颜色
    const colorCache = new Map();
    items.forEach((item) => {
      const imgSrc = item.style.backgroundImage.slice(5, -2);
      const img = new Image();
      img.crossOrigin = 'Anonymous';
      img.onload = function() {
        try {
          const colorThief = new ColorThief();
          const color = colorThief.getColor(img);
          colorCache.set(imgSrc, color);
          
          // 如果是当前活动项，立即应用颜色
          if (item.classList.contains('active')) {
            applyColor(item, color);
          }
        } catch (e) {
          console.warn('无法提取图片颜色:', e);
        }
      };
      img.src = imgSrc;
    });
    
    // 设置初始状态
    updateCarousel();
    startAutoSlide();
    
    // 设置指示器点击事件 - 使用事件委托
    document.querySelector('.carousel-indicators').addEventListener('click', (e) => {
      if (e.target.classList.contains('indicator')) {
        currentIndex = parseInt(e.target.dataset.index, 10);
        updateCarousel();
        resetAutoSlide();
      }
    });
    
    // 设置前进后退按钮
    prevBtn.addEventListener('click', () => {
      currentIndex = (currentIndex - 1 + itemCount) % itemCount;
      updateCarousel();
      resetAutoSlide();
    });
    
    nextBtn.addEventListener('click', () => {
      currentIndex = (currentIndex + 1) % itemCount;
      updateCarousel();
      resetAutoSlide();
    });
    
    // 鼠标悬停时暂停轮播
    carousel.addEventListener('mouseenter', stopAutoSlide);
    carousel.addEventListener('mouseleave', startAutoSlide);
    
    function updateCarousel() {
      // 更新轮播项
      items.forEach((item, index) => {
        if (index === currentIndex) {
          item.classList.add('active');
          const imgSrc = item.style.backgroundImage.slice(5, -2);
          if (colorCache.has(imgSrc)) {
            applyColor(item, colorCache.get(imgSrc));
          }
        } else {
          item.classList.remove('active');
        }
      });
      
      // 更新指示器
      indicators.forEach((indicator, index) => {
        indicator.classList.toggle('active', index === currentIndex);
      });
    }
    
    function applyColor(item, color) {
      const [r, g, b] = color;
      item.style.setProperty('--dominant-color', `rgb(${r}, ${g}, ${b})`);
    }
    
    function startAutoSlide() {
      stopAutoSlide();
      interval = setInterval(() => {
        currentIndex = (currentIndex + 1) % itemCount;
        updateCarousel();
      }, 5000);
    }
    
    function stopAutoSlide() {
      clearInterval(interval);
    }
    
    function resetAutoSlide() {
      stopAutoSlide();
      startAutoSlide();
    }
  });
</script>

<style>
  .carousel-container {
    position: relative;
    width: 100vw;
    height: 500px;
    overflow: hidden;
    margin-bottom: 2rem;
    margin-left: calc(-50vw + 50%);
    margin-right: calc(-50vw + 50%);
  }
  
  .carousel {
    width: 100%;
    height: 100%;
  }
  
  .carousel-item {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease;
    background-size: cover;
    background-position: center;
  }

  .carousel-item::before,
  .carousel-item::after {
    content: '';
    position: absolute;
    top: 0;
    height: 100%;
    width: 50vw; /* 使用视口宽度单位，确保填满左右两侧 */
    opacity: 0;
    transition: opacity 0.5s ease;
    background-size: cover;
    background-position: center;
  }

  .carousel-item::before {
    right: 100%;
    background-image: inherit; /* 继承父元素的背景图片 */
  }

  .carousel-item::after {
    left: 100%;
    background-image: inherit; /* 继承父元素的背景图片 */
  }
  
  .carousel-item.active {
    opacity: 1;
  }

  .carousel-item.active::before,
  .carousel-item.active::after {
    opacity: 1;
    background-color: var(--dominant-color, rgba(0, 0, 0, 0.5));
  }
  
  .carousel-content {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 2;
  }
  
  .carousel-image {
    display: none;
  }
  
  .carousel-link {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }
  
  .carousel-indicators {
    position: absolute;
    bottom: 40px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
    z-index: 2;
  }
  
  .indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  .indicator.active {
    background-color: white;
  }
  
  .carousel-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    border-radius: 50%;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 2;
    transition: background-color 0.3s ease;
  }
  
  .carousel-control:hover {
    background-color: rgba(0, 0, 0, 0.8);
  }
  
  .carousel-control.prev {
    left: 20px;
  }
  
  .carousel-control.next {
    right: 20px;
  }
  
  @media (max-width: 768px) {
    .carousel-container {
      height: 300px;
    }
    
    .carousel-content {
      position: relative;
      width: 100%;
      height: 100%;
      z-index: 2;
    }
  }
</style>