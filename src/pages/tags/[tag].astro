---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const tags = [...new Set(posts.flatMap(post => post.data.tags || []))];
  return tags.map(tag => ({
    params: { tag },
    props: { posts: posts.filter(post => post.data.tags?.includes(tag)) }
  }));
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// 按日期排序
const sortedPosts = posts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<!doctype html>
<html lang="zh-CN">
	<head>
		<BaseHead title={`${tag} | 标签 | ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<section class="tag-header">
				<h1>#{tag}</h1>
				<p class="post-count">{posts.length} 篇文章</p>
			</section>

			<section class="posts-grid">
				{sortedPosts.map(post => (
					<article class="post-card">
						<a href={`/blog/${post.id}/`}>
							<div class="post-image">
								<img src={post.data.heroImage} alt={post.data.title} />
							</div>
							<div class="post-content">
								<h2>{post.data.title}</h2>
								<p class="description">{post.data.description}</p>
								<div class="meta">
									<FormattedDate date={post.data.pubDate} />
								</div>
							</div>
						</a>
					</article>
				))}
			</section>
		</main>
		<style>
			main {
				width: 100%;
				max-width: 1200px;
				margin: 0 auto;
				padding: 3em 1em;
			}
			.tag-header {
				text-align: center;
				margin-bottom: 3em;
			}
			.tag-header h1 {
				font-size: 2.5em;
				color: rgb(var(--black));
				margin-bottom: 0.2em;
			}
			.post-count {
				color: rgb(var(--gray));
				font-size: 1.1em;
			}
			.posts-grid {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
				gap: 2em;
			}
			.post-card {
				border-radius: 12px;
				overflow: hidden;
				box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
				transition: transform 0.3s ease;
				background: #fff;
			}
			.post-card:hover {
				transform: translateY(-5px);
				box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
			}
			.post-image {
				position: relative;
				padding-top: 56.25%;
				overflow: hidden;
			}
			.post-image img {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				object-fit: cover;
			}
			.post-content {
				padding: 1.5em;
			}
			.post-content h2 {
				margin: 0;
				font-size: 1.2em;
				color: rgb(var(--black));
				line-height: 1.4;
			}
			.description {
				margin: 0.8em 0;
				font-size: 0.9em;
				color: rgb(var(--gray));
				line-height: 1.6;
			}
			.meta {
				margin-top: 1em;
				font-size: 0.8em;
				color: rgb(var(--gray));
			}
			@media (max-width: 768px) {
				.posts-grid {
					grid-template-columns: 1fr;
				}
			}
		</style>
		<Footer />
	</body>
</html>